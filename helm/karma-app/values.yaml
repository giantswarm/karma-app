name: karma
namespace: monitoring
serviceType: managed

baseDomain: rfjh2.gorilla.eu-central-1.aws.gigantic.io

oauth2:
  enabled: true
  serviceName: oauth2-proxy
  port: 4180

project:
  branch: "[[ .Branch ]]"
  commit: "[[ .SHA ]]"

image:
  registry: quay.io
  name: giantswarm/karma
  tag: v0.81
  pullPolicy: IfNotPresent

replicaCount: 1

port: 8080

service:
  type: ClusterIP
  port: 80
  annotations: {}
    # prometheus.io/scrape: "true"
  labels: {}

serviceAccount:
  # Specifies whether a ServiceAccount should be created
  create: true
  # The name of the ServiceAccount to use.
  # If not set and create is true, a name is generated using the fullname template
  name:

ingress:
  enabled: false
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  path: /
  hosts:
    - chart-example.local
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

deployment:
  annotations: {}

resources:
  limits:
    cpu: 200m
    memory: 250Mi
  requests:
    cpu: 200m
    memory: 250Mi

nodeSelector: {}

tolerations: []

affinity: {}

# Labels to be added to pod
podLabels: {}

# Annotations to be added to pod
podAnnotations: {}

securityContext: {}

# configuration for readiness probe
readinessProbe:
  delay: 5
  period: 5
  path: /health

# configMap dictates if a configmap based configuration for Karma should be used
# to provide advanced configuration. NOTE, you must use port 8080!
configMap:
  rawConfig:
    alertmanager:
      interval: 120s
      servers:
    annotations:
      default:
        hidden: true
      hidden: []
      visible: []
    filters:
      default:
        - "@state=active"
        - team=firecracker
        - alertname!~Inhibition
        - alertname!~Heartbeat
        - pipeline=stable
    grid:
      sorting:
        order: label
        reverse: false
        label: team
        customValues:
          labels: {}
    karma:
      name: Alertmanager Dashboard
    labels:
      color:
        static:
          - cluster_id
          - alert_name
        custom:
          severity:
          - value: heartbeat
            color: "#87c4e0"
          - value: notify
            color: "#ffae42"
          - value: page
            color: "#ff220c"
        unique:
          - installation
          - team
          - customer
          - provider
          - pipeline
          - area
          - topic
          - cluster_type
          - namespace
          - "@receiver"
      keep: []
      strip: []
    listen:
      address: "0.0.0.0"
      port: 8080
      prefix: /
    log:
      config: false
      level: info
    silenceForm:
      strip:
        labels:
          - area
          - cancel_if_cluster_status_creating
          - cancel_if_cluster_status_deleting
          - cancel_if_cluster_status_updating
          - cancel_if_cluster_with_notready_nodepools
          - cancel_if_outside_working_hours
          - condition
          - customer
          - exported_cluster_id
          - exported_namespace
          - exported_node
          - installation
          - instance
          - ip
          - job
          - job_name
          - node
          - phase
          - pipeline
          - pod
          - pod_name
          - pod_phase
          - pod_ready
          - provider
          - region
          - severity
          - status
          - team
          - topic
    ui:
      refresh: 30s
      hideFiltersWhenIdle: true
      colorTitlebar: false
      minimalGroupWidth: 420
      alertsPerGroup: 1
      collapseGroups: collapsed
      multiGridLabel: "severity"
